apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  labels:
    app: grafana
spec:
  replicas: { { .Values.grafana.replicaCount } }
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        version: v1
    spec:
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          ports:
            - containerPort: { { .Values.grafana.port } }
          volumeMounts:
            - name: grafana-dashboard-vol
              mountPath: /var/lib/grafana/dashboards
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-datasource-vol
              mountPath: /etc/grafana/provisioning/datasources
          env:
            - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
              value:
                {
                  {
                    .Values.grafana.env.GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH | quote,
                  },
                }
            - name: GF_PATHS_PROVISIONING
              value: { { .Values.grafana.env.GF_PATHS_PROVISIONING | quote } }
      volumes:
        - name: grafana-dashboard-vol
          configMap:
            name: grafana-dashboard-config
        - name: grafana-provisioning
          configMap:
            name: grafana-dashboard-config
        - name: grafana-datasource-vol
          configMap:
            name: grafana-datasource-config
