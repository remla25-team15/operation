apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app-frontend-v1-deployment
  labels:
    app: app-frontend
spec:
  replicas: {{ .Values.appFrontend.replicaCount }}
  selector:
    matchLabels:
      app: app-frontend
  template:
    metadata:
      labels:
        app: app-frontend
        version: v1
{{/*      annotations:*/}}
{{/*        prometheus.io/scrape: "true"*/}}
{{/*        prometheus.io/port: "{{ .Values.appFrontend.port }}"*/}}
{{/*        prometheus.io/path: "/metrics"*/}}

    spec:
      containers:
        - name: app-frontend
          image: "{{ .Values.appFrontend.image.repository }}:{{ .Values.appFrontend.versions.v1.tag }}"
          ports:
            - containerPort: {{ .Values.appFrontend.port }}
          env:
            - name: FLASK_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: flask_env
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: name
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: port
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: host
            - name: APP_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: app_service_url
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app-frontend-v2-deployment
  labels:
    app: app-frontend
spec:
  replicas: {{ .Values.appFrontend.replicaCount }}
  selector:
    matchLabels:
      app: app-frontend
  template:
    metadata:
      labels:
        app: app-frontend
        version: v2
{{/*      annotations:*/}}
{{/*        prometheus.io/scrape: "true"*/}}
{{/*        prometheus.io/port: "{{ .Values.appFrontend.port }}"*/}}
{{/*        prometheus.io/path: "/metrics"*/}}
    spec:
      containers:
        - name: app-frontend
          image: "{{ .Values.appFrontend.image.repository }}:{{ .Values.appFrontend.versions.v2.tag }}"
          ports:
            - containerPort: {{ .Values.appFrontend.port }}
          env:
            - name: FLASK_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: flask_env
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: name
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: port
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: host
            - name: APP_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-app-frontend-config
                  key: app_service_url