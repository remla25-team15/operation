# Istio Virtual Services for traffic routing and A/B testing
# 
# A/B Testing Implementation:
# The frontend virtual service below implements traffic splitting for A/B testing:
# - 60% of traffic goes to version v1 (traditional button interface)
# - 40% of traffic goes to version v2 (thumbs up/down feedback interface)
#
# Combined with sticky sessions (source IP hashing in DestinationRules), 
# users will consistently see the same version throughout their session.

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ .Release.Name }}-frontend-vs
spec:
  hosts:
  - "{{ .Values.ingress.host }}"
  gateways:
  - {{ .Release.Name }}-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    # A/B Testing: Traffic split between two frontend versions
    - destination:
        host: {{ .Release.Name }}-app-frontend-service
        subset: v1  # Traditional button interface
        port:
          number: {{ .Values.appFrontend.servicePort | default 80 }}
      weight: 60  # 60% of users see version 1
    - destination:
        host: {{ .Release.Name }}-app-frontend-service
        subset: v2  # Thumbs up/down feedback interface
        port:
          number: {{ .Values.appFrontend.servicePort | default 80 }}
      weight: 40  # 40% of users see version 2
--- apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ .Release.Name }}-app-service-vs
spec:
  hosts:
  - "{{ .Values.ingress.host }}"
  gateways:
  - {{ .Release.Name }}-gateway
  http:
  - match:
    - uri:
        prefix: /app/
    route:
    - destination:
        host: {{ .Release.Name }}-app-service
        port:
          number: {{ .Values.appService.servicePort | default 80 }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ .Release.Name }}-model-service-vs
spec:
  hosts:
  - "{{ .Values.ingress.host }}"
  gateways:
  - {{ .Release.Name }}-gateway
  http:
  - match:
    - uri:
        prefix: /model/
    route:
    - destination:
        host: {{ .Release.Name }}-model-service
        port:
          number: {{ .Values.modelService.servicePort | default 80 }}
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: kiali-vs
  namespace: istio-system
spec:
  hosts:
    - "kiali.local"
  gateways:
    - default/{{ .Release.Name }}-gateway
  http:
  - match:
      - uri:
          prefix: /
    route:
      - destination:
          host: kiali.istio-system.svc.cluster.local
          port:
            number: 20001

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: prometheus-vs
  namespace: istio-system
spec:
  hosts:
    - "prometheus.local"
  gateways:
    - default/{{ .Release.Name }}-gateway
  http:
  - match:
      - uri:
          prefix: /
    route:
      - destination:
          host: prometheus-operated.monitoring.svc.cluster.local
          port:
            number: 9090
